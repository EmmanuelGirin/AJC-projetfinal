---
apiVersion: apps/v1
kind: Deployment
metadata:
 name: pgadmin
 namespace: icgroup
 labels:
   app: pgadmin
   environment : production
spec:
 replicas: 1
 selector:
   matchLabels:
     app: pgadmin
     tier: frontend
 strategy: {}
 template:
   metadata:
     labels:
       app: pgadmin
       environment: production
       tier: frontend
   spec:
     initContainers:
      - name: volume-mount-hack
        image: busybox
        command: ["sh", "-c", " chown -R 5050:5050 /var/lib/pgadmin"]
        volumeMounts:
        - name: pg-admin-data
          mountPath: /var/lib/pgadmin
     containers:
       - env:
         - name: PGADMIN_DEFAULT_EMAIL
           value: user@pgadmin.com
         - name: PGADMIN_DEFAULT_PASSWORD
           valueFrom:
             secretKeyRef:
              name: pgadmin
              key: pgadmin-password
         - name: PGADMIN_PORT
           value: "80"
         name: pgadmin
         image: dpage/pgadmin4:5.4
         imagePullPolicy: IfNotPresent
         ports:
         - name: http
           containerPort: 80
           protocol: TCP
         volumeMounts:
         - name: pgadmin-config
           mountPath: /pgadmin4/servers.json
           subPath: servers.json
           readOnly: true
         - name: pg-admin-data
           mountPath: /var/lib/pgadmin
     volumes:
     - name: pgadmin-config
       configMap:
         name: pgadmin-config
         items:
         - key: servers.json
           path: servers.json 
     - name: pg-admin-data
       persistentVolumeClaim:
         claimName: pgadmin-pvc